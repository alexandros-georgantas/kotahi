const fs = require('fs')
const path = require('path')
const htmlparser2 = require('htmlparser2')
const cheerio = require('cheerio')

const rawData = fs.readFileSync(
  path.resolve(__dirname, 'data/sampleReferences.xml'),
  'utf8',
)

// Assuming that you have anystyle-cli running locally, sample data can be generated by running anystyle-cli locally:
//
//   anystyle -f xml parse server/anystyle/data/sampleReferences.txt server/anystyle/data
//
// which will export JSON and XML to server/anystyle/data
//
// If using a different filename, change the filenames in this file for sampleReferenceArray and rawData.
// The XML created this way is interesting but not as detailed as the JSON--look at the author names for example.

// # JATS tags and JATS-flavored HTML equivalents:
//
// <ref-list> —> <section class="reflist">
// <ref id="ref-###"><mixed-citation> --> <p class="mixedcitation" id="ref=###">
//
// AUTHORS
//
// <person-group person-group-type="author"> --> <span class="author-group">
// <name> --> <span class="author-name">
//
// TITLES
//
// <source> ––> <span class="journal-title">
// <article-title> --< <span class="article-title">
// <volume> --> <span class="volume">
// <issue> --> <span class="issue">
// <year> --> <span class="year">
// <fpage> --> <span class="first-page">
// <lpage> --> <span class="last-page">
// <doi> ==> <a class="doi" href="https://doi.org/###">###</a>
//
// NOT BEING HANDLED:
//
// <surname> --> <span class="surname">
// <given-names> --> <span class="givennames">
// <suffix> --> <span class="suffix">
// <etal> --> <span class="etal" />
// <string-name> --> <span class="stringname"> (it would be nice if we didn't have to use this!)

// const makeStringSafeId = str =>
//   encodeURIComponent(str)
//     .toLowerCase()
//     .replace(/\.|%[0-9a-z]{2}/gi, '')

const anystyleXmlToHtml = anystyleXml => {
  // this takes the XML input from Anystyle and converts it to our HTML
  // maybe we could inject content from the JSON into the HTML if this can be done.
  const dom = htmlparser2.parseDocument(anystyleXml)
  const $ = cheerio.load(dom, { xmlMode: true })

  // 1. replace <dataset> with  <section class="reflist">
  // 2. replace <section> with <p class="mixedcitation" id="ref=###">
  // 2.5. id is coming from <citation-number>, delete <citation-number>
  // 3. replace <author> with <span class="authorgroup">
  // 4. replace <title> with <title>

  // n. strip out all unknown tags, log them

  const outHtml = $.html()
  return outHtml
}

// This is designed for testing anystyle's conversion. To run:
//
// node server/anystyle/anystyleToHtml.js > server/anystyle/output/log.md

// anyStyleToHtml(rawData, sampleReferenceArray)

console.log(anystyleXmlToHtml(rawData))

module.exports = anystyleXmlToHtml
