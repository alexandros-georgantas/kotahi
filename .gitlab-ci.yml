# include:
#   - project: 'cokoapps/ci'
#     ref: main
#     file: 'ci-templates.yml'

variables:
  # IMAGE_NAME_DEVELOPMENT: ketty-client-ci-development
  # IMAGE_NAME_PREPRODUCTION_DEVELOP: ketty-client-ci-production-develop
  # IMAGE_NAME_PREPRODUCTION_DEMO: ketty-client-ci-production-demo
  # IMAGE_NAME_PRODUCTION_DEVELOP: ketty-client-deploy-develop
  # IMAGE_NAME_PRODUCTION_DEMO: ketty-client
  # IMAGE_NAME_STORYBOOK: ketty-client-storybook
  # PATH_TO_BUILD: .
  # PATH_INSIDE_CONTAINER: /home/node/ketida
  # COMPOSE_FILE_STORYBOOK: docker-compose.storybook-deploy.yml
  # COMPOSE_FILE_DEPLOY_DEVELOP: docker-compose.develop-deploy.yml
  # COMPOSE_FILE_DEPLOY_DEMO: docker-compose.demo-deploy.yml
  IMAGE_NAME_PREPRODUCTION_CLIENT: kotahi-client-preproduction
  IMAGE_NAME_PREPRODUCTION_SERVER: kotahi-server-preproduction

stages:
  # - Build development
  # - Lint & Unit test
  - Build production
  # - Publish
  # - Deploy

build production client:
  stage: Build production
  image: docker:23
  services:
    - docker:23-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/client
    - docker pull $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest || true
    - docker build
      --cache-from $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest
      -f Dockerfile-production .
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest

build production server:
  stage: Build production
  image: docker:23
  services:
    - docker:23-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/server
    - docker pull $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
    - docker build
      --cache-from $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
      -f Dockerfile-production .
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
