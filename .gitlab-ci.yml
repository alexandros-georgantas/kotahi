# include:
#   - project: 'cokoapps/ci'
#     ref: main
#     file: 'ci-templates.yml'

variables:
  DOCKER_BUILDKIT: 1
  IMAGE_NAME_DEVELOPMENT: kotahi/kotahi/root-development
  IMAGE_NAME_PREPRODUCTION_CLIENT: kotahi/kotahi/client-preproduction
  IMAGE_NAME_PREPRODUCTION_SERVER: kotahi/kotahi/server-preproduction
  DEPLOY_COMPOSE_FILE: docker-compose.ci.yml

stages:
  - Build development
  - Lint & Unit test
  - Build production
  - Deploy
  # - Publish

.build development:
  stage: Build development
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:23-dind
  services:
    - docker:23-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    # - docker pull $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.latest || true
    # --cache-from $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.latest
    # --tag $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.latest
    - docker build
      --tag $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      -f Dockerfile .
    - docker push $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    # - docker push $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.latest

.lint:
  stage: Lint & Unit test
  image: $CI_REGISTRY/$IMAGE_NAME_DEVELOPMENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
  script:
    - cd /home/node/app
    - yarn coko-lint run

.build production client:
  stage: Build production
  image: docker:23
  services:
    - docker:23-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/client
    - docker pull $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest || true
    - docker build
      --cache-from $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest
      -f Dockerfile-production .
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest

.build production server:
  stage: Build production
  image: docker:23
  services:
    - docker:23-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - cd packages/server
    - docker pull $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest || true
    - docker build
      --cache-from $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
      --tag $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
      -f Dockerfile-production .
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    - docker push $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest

deploy test:
  stage: Deploy
  image: $CI_REGISTRY/cokoinfra/ansible-deployer
  services:
    - docker:23-dind
  variables:
    ANSCOMPOSE_POSTGRES_ALLOW_SELF_SIGNED_CERTIFICATES: true
    ANSCOMPOSE_ORCID_CLIENT_ID: $ORCID_CLIENT_ID_2
    ANSCOMPOSE_ORCID_CLIENT_SECRET: $ORCID_CLIENT_SECRET_2
    ANSCOMPOSE_USE_SANDBOXED_ORCID: true
    ANSCOMPOSE_INSTANCE_GROUPS: journal:journal
    ANSCOMPOSE_MANUSCRIPTS_TABLE_COLUMNS: 'shortId, submission.$title, created, updated, status, author'
    COMPOSE_SERVICES: client,server
    COMPOSE_SERVICES_CLIENT_URL: kotahi.coko.app
    # COMPOSE_SERVICES_CLIENT_IMAGE: $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    COMPOSE_SERVICES_CLIENT_IMAGE: $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_CLIENT:$CI_COMMIT_REF_NAME.latest
    COMPOSE_SERVICES_SERVER_URL: server.kotahi.coko.app
    # COMPOSE_SERVICES_SERVER_IMAGE: $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.$CI_COMMIT_SHA
    COMPOSE_SERVICES_SERVER_IMAGE: $CI_REGISTRY/$IMAGE_NAME_PREPRODUCTION_SERVER:$CI_COMMIT_REF_NAME.latest
    do_spaces_access_key: $DIGITAL_OCEAN_SPACES_ACCESS_KEY
    do_spaces_secret_key: $DIGITAL_OCEAN_SPACES_SECRET_KEY
  script:
    - echo $COMPOSE_SERVICES_CLIENT_IMAGE
    # - kubectl config get-contexts
    # - kubectl config use-context kotahi/agent:agent-1
    # - cp $DEPLOY_COMPOSE_FILE /ansible
    # - cd /ansible
    # - ANSIBLE_FORCE_COLOR=true ansible-playbook bootstrap.yml -e "compose_file=$DEPLOY_COMPOSE_FILE"
